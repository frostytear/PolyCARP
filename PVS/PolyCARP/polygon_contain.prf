(polygon_contain
 (on_any_edge?_TCC1 0
  (on_any_edge?_TCC1-1 nil 3671375556 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (near_any_edge_upto_TCC1 0
  (near_any_edge_upto_TCC1-1 nil 3634478812 ("" (subtype-tcc) nil nil)
   nil nil))
 (near_any_edge_upto_TCC2 0
  (near_any_edge_upto_TCC2-1 nil 3634478812 ("" (subtype-tcc) nil nil)
   nil nil))
 (near_any_edge_upto_TCC3 0
  (near_any_edge_upto_TCC3-1 nil 3634478812
   ("" (skeep*) (("" (ground) nil nil)) nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil))
 (near_any_edge_upto_TCC4 0
  (near_any_edge_upto_TCC4-1 nil 3634478812 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (near_poly_edge const-decl "bool" acceptable_polygon nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil))
 (near_any_edge_upto_TCC5 0
  (near_any_edge_upto_TCC5-1 nil 3634478812
   ("" (termination-tcc) nil nil)
   ((abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (sign const-decl "Sign" sign "reals/")
    (- const-decl "Vector" vectors_2D "vectors/")
    (* const-decl "real" vectors_2D "vectors/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (sq const-decl "nonneg_real" sq "reals/")
    (expt def-decl "real" exponentiation nil)
    (^ const-decl "real" exponentiation nil)
    (quadratic const-decl "real" quadratic "reals/")
    (quad_min_le_D_int const-decl "bool" quad_minmax "reals/")
    (near_edge const-decl "bool" edge_proximity nil)
    (near_poly_edge const-decl "bool" acceptable_polygon nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (near_any_edge_upto_TCC6 0
  (near_any_edge_upto_TCC6-1 nil 3634478812
   ("" (skeep*)
    (("" (assert)
      (("" (typepred "v(N,p,s,BUFF,i-1)")
        (("" (split +)
          (("1" (flatten)
            (("1" (assert)
              (("1" (split -)
                (("1" (inst + "i") nil nil)
                 ("2" (assert)
                  (("2" (skeep) (("2" (inst + "j") nil nil)) nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (assert)
              (("2" (skeep)
                (("2" (inst + "j") (("2" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (N skolem-const-decl "posnat" polygon_contain nil)
    (i skolem-const-decl "below(N)" polygon_contain nil)
    (j skolem-const-decl "upto(i)" polygon_contain nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (near_poly_edge const-decl "bool" acceptable_polygon nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil))
 (near_any_edge_upto_def_TCC1 0
  (near_any_edge_upto_def_TCC1-1 nil 3671376691
   ("" (subtype-tcc) nil nil)
   ((* const-decl "Vector" vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (on_any_edge? const-decl "bool" polygon_contain nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (near_any_edge_upto_def 0
  (near_any_edge_upto_def-1 nil 3671375668
   ("" (skeep*)
    (("" (expand "on_any_edge?")
      (("" (skeep)
        ((""
          (case "FORALL (k:nat): i!1+k<=N-1 IMPLIES near_any_edge_upto(N, p, s, BUFF, i!1+k)")
          (("1" (inst - "N-1-i!1") (("1" (assert) nil nil)) nil)
           ("2" (hide 2)
            (("2" (induct "k")
              (("1" (assert)
                (("1" (expand "near_any_edge_upto")
                  (("1" (case "i!1=0")
                    (("1" (assert)
                      (("1" (expand "near_poly_edge")
                        (("1" (lemma "near_edge_def")
                          (("1" (inst?)
                            (("1" (replace 1)
                              (("1"
                                (assert)
                                (("1"
                                  (inst + "s")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split +)
                                      (("1"
                                        (replace -1)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (expand "sq")
                                        (("2"
                                          (lemma
                                           "posreal_times_posreal_is_posreal")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (ground) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (replace 1)
                      (("2" (flatten)
                        (("2" (expand "near_poly_edge")
                          (("2" (lemma "near_edge_def")
                            (("2" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (replace 2)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (inst + "s")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (expand "sq")
                                            (("1"
                                              (lemma
                                               "posreal_times_posreal_is_posreal")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (ground) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep*)
                (("2" (assert)
                  (("2" (expand "near_any_edge_upto" 1)
                    (("2" (propax) nil nil)) nil))
                  nil))
                nil)
               ("3" (skosimp*) (("3" (ground) nil nil)) nil))
              nil))
            nil)
           ("3" (skosimp*) (("3" (ground) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (on_any_edge? const-decl "bool" polygon_contain nil)
    (near_any_edge_upto def-decl
     "{bb: bool | bb IFF (EXISTS (j: upto(i)): near_poly_edge(N, p, s, BUFF, j))}"
     polygon_contain nil)
    (near_poly_edge const-decl "bool" acceptable_polygon nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (<= const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (N skolem-const-decl "posnat" polygon_contain nil)
    (i!1 skolem-const-decl "below(N)" polygon_contain nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (near_edge_def formula-decl nil edge_proximity nil)
    (posreal_times_posreal_is_posreal judgement-tcc nil real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sq const-decl "nonneg_real" sq "reals/")
    (sqv_zero formula-decl nil vectors_2D "vectors/")
    (sub_eq_args formula-decl nil vectors_2D "vectors/")
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (number_upshot_crosses_upto_TCC1 0
  (number_upshot_crosses_upto_TCC1-1 nil 3634551516
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil))
   nil))
 (number_upshot_crosses_upto_TCC2 0
  (number_upshot_crosses_upto_TCC2-1 nil 3634551516
   ("" (termination-tcc) nil nil)
   ((expt def-decl "real" exponentiation nil)
    (^ const-decl "real" exponentiation nil)
    (upshot_crosses_edge const-decl "EdgeCross" acceptable_polygon nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (number_upshot_crosses_upto_TCC3 0
  (number_upshot_crosses_upto_TCC3-1 nil 3634551516
   ("" (skeep*)
    (("" (lift-if -3)
      (("" (split -)
        (("1" (flatten)
          (("1" (replace -1)
            (("1" (assert)
              (("1" (replace -2)
                (("1" (assert)
                  (("1" (split +)
                    (("1" (lift-if) (("1" (ground) nil nil)) nil)
                     ("2" (lift-if)
                      (("2" (ground)
                        (("1" (inst + "LAMBDA (j:below(1)): 0")
                          (("1" (expand "bijective?")
                            (("1" (expand "injective?")
                              (("1"
                                (expand "surjective?")
                                (("1"
                                  (skosimp*)
                                  (("1" (inst + "0") nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skosimp*)
                            (("2" (replaces -4)
                              (("2" (ground) nil nil)) nil))
                            nil)
                           ("3" (skeep)
                            (("3" (expand "edges_crossed_upto")
                              (("3" (propax) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (inst + "LAMBDA (j:below(0)): 0")
                          (("1" (expand "bijective?")
                            (("1" (split)
                              (("1"
                                (expand "injective?")
                                (("1" (skosimp*) nil nil))
                                nil)
                               ("2"
                                (expand "surjective?")
                                (("2"
                                  (skosimp*)
                                  (("2"
                                    (typepred "y!1")
                                    (("2"
                                      (expand "edges_crossed_upto")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skosimp*) nil nil))
                          nil))
                        nil))
                      nil)
                     ("3" (flatten)
                      (("3" (inst + "0")
                        (("3" (replaces -4 :dir rl) nil nil)) nil))
                      nil)
                     ("4" (flatten)
                      (("4" (skosimp*) (("4" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (flatten)
          (("2" (assert)
            (("2" (typepred "v(N,p,s,i-1)")
              (("2" (replace -5 :dir rl)
                (("2" (split +)
                  (("1" (lift-if) (("1" (ground) nil nil)) nil)
                   ("2" (skeep)
                    (("2"
                      (name "siggy"
                            "LAMBDA (j:below(lastans`num+thisnum)): IF j=lastans`num THEN i ELSE sig(j) ENDIF")
                      (("1" (inst + "siggy")
                        (("1" (expand "bijective?")
                          (("1" (flatten)
                            (("1" (split +)
                              (("1"
                                (expand "injective?")
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (expand "siggy" -1)
                                    (("1"
                                      (lift-if -1)
                                      (("1"
                                        (lift-if -1)
                                        (("1"
                                          (lift-if -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (ground)
                                              (("1"
                                                (inst - "x1!1" "x2!1")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (inst - "x1!1" "x2!1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "surjective?")
                                (("2"
                                  (skeep)
                                  (("2"
                                    (typepred "y")
                                    (("2"
                                      (expand "edges_crossed_upto")
                                      (("2"
                                        (case "y =i")
                                        (("1"
                                          (inst + "lastans`num")
                                          (("1"
                                            (expand "siggy" 1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (lift-if)
                                            (("2" (ground) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst -6 "y")
                                          (("1"
                                            (skosimp*)
                                            (("1"
                                              (inst + "x!1")
                                              (("1"
                                                (expand "siggy" +)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (expand
                                               "edges_crossed_upto")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (expand "siggy" +)
                            (("2" (lift-if)
                              (("2"
                                (assert)
                                (("2"
                                  (split +)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (ground)
                                        (("1"
                                          (expand "edges_crossed_upto")
                                          (("1" (propax) nil nil))
                                          nil)
                                         ("2"
                                          (expand "edges_crossed_upto")
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (typepred "sig(x1!1)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand
                                             "edges_crossed_upto")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (assert)
                            (("2" (typepred "j!1")
                              (("2"
                                (lift-if)
                                (("2" (ground) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (flatten)
                    (("3" (assert)
                      (("3" (split -)
                        (("1" (assert)
                          (("1" (inst + "i") (("1" (assert) nil nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (skeep -4) (("2" (inst + "j") nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (flatten)
                    (("4" (assert)
                      (("4" (skeep)
                        (("4" (case "j = i")
                          (("1" (assert) nil nil)
                           ("2" (inst + "j") (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (upshot_crosses_edge const-decl "EdgeCross" acceptable_polygon nil)
    (EdgeCross type-eq-decl nil acceptable_polygon nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NumEdgesCross type-eq-decl nil polygon_contain nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (y skolem-const-decl "(edges_crossed_upto(N, p, s, i))"
     polygon_contain nil)
    (siggy skolem-const-decl "[below(lastans`num + thisnum) -> nat]"
     polygon_contain nil)
    (j skolem-const-decl "upto(i)" polygon_contain nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (FALSE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (i skolem-const-decl "below(N)" polygon_contain nil)
    (s skolem-const-decl "Vect2" polygon_contain nil)
    (p skolem-const-decl "polygon_2D(N)" polygon_contain nil)
    (N skolem-const-decl "posnat" polygon_contain nil)
    (edges_crossed_upto const-decl "bool" polygon_contain nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (thisnum skolem-const-decl "naturalnumber" polygon_contain nil)
    (lastans skolem-const-decl
     "[# invalid: bool, num: naturalnumber #]" polygon_contain nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (injective? const-decl "bool" functions nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil))
 (winding_number_rec_TCC1 0
  (winding_number_rec_TCC1-1 nil 3653402598 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (- const-decl "Vector" vectors_2D "vectors/"))
   nil))
 (winding_number_rec_TCC2 0
  (winding_number_rec_TCC2-1 nil 3653402598 ("" (subtype-tcc) nil nil)
   ((- const-decl "Vector" vectors_2D "vectors/")) nil))
 (winding_number_rec_TCC3 0
  (winding_number_rec_TCC3-1 nil 3653402598 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (subrange type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (det const-decl "real" det_2D "vectors/")
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (- const-decl "Vector" vectors_2D "vectors/")
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (winding_number_rec_TCC4 0
  (winding_number_rec_TCC4-1 nil 3653402598
   ("" (termination-tcc) nil nil)
   ((nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (det const-decl "real" det_2D "vectors/")
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (quadrant const-decl "subrange(1, 4)" polygon_contain nil)
    (- const-decl "Vector" vectors_2D "vectors/"))
   nil))
 (winding_number_rec4_TCC1 0
  (winding_number_rec4_TCC1-1 nil 3653402598 ("" (subtype-tcc) nil nil)
   nil nil))
 (winding_number_rec4 0
  (winding_number_rec4-2 nil 3653408962
   (""
    (case "FORALL (N: posnat, p: polygon_2D(N), s: Vect2,i:nat):i<N IMPLIES
                                           divides(4, winding_number_rec(N, p, s, i) + quadrant(p(0)-s) - quadrant(IF i<N-1 THEN p(i+1)-s ELSE p(0)-s ENDIF))")
    (("1" (skeep)
      (("1" (inst - "N" "p" "s" "N-1") (("1" (assert) nil nil)) nil))
      nil)
     ("2" (hide 2)
      (("2"
        (case "FORALL (g:Vect2): LET qq = quadrant(g) IN qq=1 OR qq=2 OR qq=3 OR qq=4")
        (("1" (case "divides(4,4) AND divides(4,0) AND divides(4,-4)")
          (("1" (flatten)
            (("1" (induct "i")
              (("1" (skeep)
                (("1" (assert)
                  (("1" (expand "winding_number_rec")
                    (("1" (lift-if)
                      (("1" (assert)
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (ground)
                              (("1"
                                (both-sides "+" 1 -1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -1)
                                    (("1"
                                      (expand "mod" +)
                                      (("1"
                                        (expand "divides")
                                        (("1" (inst?) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replace -1)
                                (("2"
                                  (expand "mod")
                                  (("2"
                                    (expand "divides")
                                    (("2"
                                      (inst
                                       +
                                       "-floor(quadrant(p(1)-s)/4)")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (inst-cp - "p(0)-s")
                                (("3"
                                  (inst - "p(1)-s")
                                  (("3"
                                    (ground)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (replaces -1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replaces -1)
                                      (("2"
                                        (replaces -1)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (replaces -1)
                                      (("3"
                                        (replaces -1)
                                        (("3" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (replaces -1)
                                      (("4"
                                        (replaces -1)
                                        (("4" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("5"
                                      (replaces -1)
                                      (("5"
                                        (replaces -1)
                                        (("5" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("6"
                                      (replaces -1)
                                      (("6"
                                        (replaces -1)
                                        (("6" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("7"
                                      (replaces -1)
                                      (("7"
                                        (replaces -1)
                                        (("7" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("8"
                                      (replaces -1)
                                      (("8"
                                        (replaces -1)
                                        (("8" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("4"
                                (inst-cp - "p(0)-s")
                                (("4"
                                  (inst - "p(1)-s")
                                  (("4"
                                    (ground)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (replaces -1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replaces -1)
                                      (("2"
                                        (replaces -1)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (replaces -1)
                                      (("3"
                                        (replaces -1)
                                        (("3" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (replaces -1)
                                      (("4"
                                        (replaces -1)
                                        (("4" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("5"
                                      (replaces -1)
                                      (("5"
                                        (replaces -1)
                                        (("5" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("6"
                                      (replaces -1)
                                      (("6"
                                        (replaces -1)
                                        (("6" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("7"
                                      (replaces -1)
                                      (("7"
                                        (replaces -1)
                                        (("7" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("8"
                                      (replaces -1)
                                      (("8"
                                        (replaces -1)
                                        (("8" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skolem 1 "i")
                (("2" (flatten)
                  (("2" (skeep)
                    (("2" (case "i/=N-2")
                      (("1" (flatten)
                        (("1" (expand "winding_number_rec" +)
                          (("1" (lift-if)
                            (("1" (assert)
                              (("1"
                                (lift-if)
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst-cp - "p(i+1)-s")
                                    (("1"
                                      (inst - "p(2+i)-s")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split +)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (inst - "N" "p" "s")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (insteep -)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "divides"
                                                           -2)
                                                          (("1"
                                                            (skolem
                                                             -
                                                             "K")
                                                            (("1"
                                                              (both-sides
                                                               "+"
                                                               "quadrant(p(i+1)-s) - quadrant(p(i+2)) + 1"
                                                               -2)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (hide
                                                                   -2)
                                                                  (("1"
                                                                    (ground)
                                                                    (("1"
                                                                      (replaces
                                                                       -1)
                                                                      (("1"
                                                                        (replaces
                                                                         -1)
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replaces
                                                                       -1)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (replaces
                                                                       -1)
                                                                      (("3"
                                                                        (replaces
                                                                         -1)
                                                                        (("3"
                                                                          (expand
                                                                           "divides")
                                                                          (("3"
                                                                            (inst
                                                                             +
                                                                             "1+K")
                                                                            (("3"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (replaces
                                                                       -1)
                                                                      (("4"
                                                                        (replaces
                                                                         -1)
                                                                        (("4"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("5"
                                                                      (replaces
                                                                       -1)
                                                                      (("5"
                                                                        (replaces
                                                                         -1)
                                                                        (("5"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("6"
                                                                      (replaces
                                                                       -1)
                                                                      (("6"
                                                                        (replaces
                                                                         -1)
                                                                        (("6"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("7"
                                                                      (replaces
                                                                       -1)
                                                                      (("7"
                                                                        (replaces
                                                                         -1)
                                                                        (("7"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("8"
                                                                      (replaces
                                                                       -1)
                                                                      (("8"
                                                                        (replaces
                                                                         -1)
                                                                        (("8"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("9"
                                                                      (replaces
                                                                       -1)
                                                                      (("9"
                                                                        (replaces
                                                                         -1)
                                                                        (("9"
                                                                          (assert)
                                                                          (("9"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (split +)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "N"
                                                             "p"
                                                             "s")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "divides"
                                                                 -2)
                                                                (("1"
                                                                  (skolem
                                                                   -
                                                                   "K")
                                                                  (("1"
                                                                    (both-sides
                                                                     "+"
                                                                     "quadrant(p(i+1)-s) - quadrant(p(i+2)-s) -1"
                                                                     -2)
                                                                    (("1"
                                                                      (replaces
                                                                       -2)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (replaces
                                                                             -1)
                                                                            (("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (replaces
                                                                             -1)
                                                                            (("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (replaces
                                                                             -1)
                                                                            (("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (replaces
                                                                             -1)
                                                                            (("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (replaces
                                                                             -1)
                                                                            (("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (assert)
                                                                                (("7"
                                                                                  (expand
                                                                                   "divides")
                                                                                  (("7"
                                                                                    (inst
                                                                                     +
                                                                                     "K-1")
                                                                                    (("7"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (replaces
                                                                             -1)
                                                                            (("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (replaces
                                                                             -1)
                                                                            (("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split +)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (insteep
                                                                 -)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "divides"
                                                                     -2)
                                                                    (("1"
                                                                      (skolem
                                                                       -
                                                                       "K")
                                                                      (("1"
                                                                        (both-sides
                                                                         "+"
                                                                         "quadrant(p(i+1)-s) - quadrant(p(i+2)-s) +2"
                                                                         -2)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (both-sides
                                                                             "+"
                                                                             "2"
                                                                             -2)
                                                                            (("1"
                                                                              (replaces
                                                                               -2)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "divides")
                                                                                          (("2"
                                                                                            (inst
                                                                                             +
                                                                                             "K+1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("3"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("3"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("4"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("4"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("5"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("5"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("5"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("6"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("6"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("6"
                                                                                        (assert)
                                                                                        (("6"
                                                                                          (expand
                                                                                           "divides")
                                                                                          (("6"
                                                                                            (inst
                                                                                             +
                                                                                             "K+1")
                                                                                            (("6"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("7"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("7"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("7"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("8"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("8"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("8"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("9"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("9"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("9"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("10"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("10"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("10"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (insteep
                                                               -)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "divides"
                                                                   -1)
                                                                  (("2"
                                                                    (skolem
                                                                     -
                                                                     "K")
                                                                    (("2"
                                                                      (both-sides
                                                                       "+"
                                                                       "quadrant(p(i+1)-s) - quadrant(p(i+2)-s) -2"
                                                                       -1)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (ground)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (replaces
                                                                                 -1)
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (replaces
                                                                                 -1)
                                                                                (("4"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (replaces
                                                                                 -1)
                                                                                (("5"
                                                                                  (assert)
                                                                                  (("5"
                                                                                    (expand
                                                                                     "divides")
                                                                                    (("5"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("5"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (replaces
                                                                                 -1)
                                                                                (("6"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (replaces
                                                                                 -1)
                                                                                (("7"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (replaces
                                                                                 -1)
                                                                                (("8"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (replaces
                                                                                 -1)
                                                                                (("9"
                                                                                  (assert)
                                                                                  (("9"
                                                                                    (expand
                                                                                     "divides")
                                                                                    (("9"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("9"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("10"
                                                                              (replaces
                                                                               -1)
                                                                              (("10"
                                                                                (replaces
                                                                                 -1)
                                                                                (("10"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (flatten)
                          (("2" (expand "winding_number_rec" +)
                            (("2" (assert)
                              (("2"
                                (case "NOT i+1 = N-1")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (lift-if)
                                  (("2"
                                    (inst-cp - "p(1+i)-s")
                                    (("2"
                                      (split +)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (insteep -)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (split +)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (insteep -)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "p(0)-s")
                                                          (("1"
                                                            (expand
                                                             "divides"
                                                             -4)
                                                            (("1"
                                                              (skolem
                                                               -
                                                               "K")
                                                              (("1"
                                                                (both-sides
                                                                 +
                                                                 "1-quadrant(p(0)-s)+quadrant(p(N-1)-s)"
                                                                 -4)
                                                                (("1"
                                                                  (replaces
                                                                   -4)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (ground)
                                                                      (("1"
                                                                        (replaces
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (replaces
                                                                           -1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (replaces
                                                                         -1)
                                                                        (("3"
                                                                          (replaces
                                                                           -1)
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (expand
                                                                               "divides"
                                                                               +)
                                                                              (("3"
                                                                                (inst
                                                                                 +
                                                                                 "K+1")
                                                                                (("3"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (replaces
                                                                         -1)
                                                                        (("4"
                                                                          (replaces
                                                                           -1)
                                                                          (("4"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("5"
                                                                        (replaces
                                                                         -1)
                                                                        (("5"
                                                                          (replaces
                                                                           -1)
                                                                          (("5"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("6"
                                                                        (replaces
                                                                         -1)
                                                                        (("6"
                                                                          (replaces
                                                                           -1)
                                                                          (("6"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("7"
                                                                        (replaces
                                                                         -1)
                                                                        (("7"
                                                                          (replaces
                                                                           -1)
                                                                          (("7"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("8"
                                                                        (replaces
                                                                         -1)
                                                                        (("8"
                                                                          (replaces
                                                                           -1)
                                                                          (("8"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("9"
                                                                        (replaces
                                                                         -1)
                                                                        (("9"
                                                                          (replaces
                                                                           -1)
                                                                          (("9"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst-cp
                                                       -
                                                       "p(0)-s")
                                                      (("1"
                                                        (insteep -)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "divides"
                                                             -4)
                                                            (("1"
                                                              (skolem
                                                               -
                                                               "K")
                                                              (("1"
                                                                (both-sides
                                                                 +
                                                                 "-1-quadrant(p(0)-s)+quadrant(p(N-1)-s)"
                                                                 -4)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (hide
                                                                       -4)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (replaces
                                                                             -1)
                                                                            (("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (replaces
                                                                             -1)
                                                                            (("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (replaces
                                                                             -1)
                                                                            (("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (replaces
                                                                             -1)
                                                                            (("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (replaces
                                                                             -1)
                                                                            (("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (assert)
                                                                                (("7"
                                                                                  (expand
                                                                                   "divides"
                                                                                   +)
                                                                                  (("7"
                                                                                    (inst
                                                                                     +
                                                                                     "K-1")
                                                                                    (("7"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (replaces
                                                                             -1)
                                                                            (("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (replaces
                                                                             -1)
                                                                            (("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (split +)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (insteep -)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "divides"
                                                             -4)
                                                            (("1"
                                                              (skolem
                                                               -
                                                               "K")
                                                              (("1"
                                                                (both-sides
                                                                 +
                                                                 "2-quadrant(p(0)-s)+quadrant(p(N-1)-s)"
                                                                 -4)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replaces
                                                                     -4)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "p(0)-s")
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "divides"
                                                                                   +)
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "K+1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (replaces
                                                                             -1)
                                                                            (("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (replaces
                                                                             -1)
                                                                            (("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (replaces
                                                                             -1)
                                                                            (("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (replaces
                                                                             -1)
                                                                            (("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (assert)
                                                                                (("6"
                                                                                  (expand
                                                                                   "divides"
                                                                                   +)
                                                                                  (("6"
                                                                                    (inst
                                                                                     +
                                                                                     "K+1")
                                                                                    (("6"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (replaces
                                                                             -1)
                                                                            (("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (replaces
                                                                             -1)
                                                                            (("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (replaces
                                                                             -1)
                                                                            (("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("10"
                                                                            (replaces
                                                                             -1)
                                                                            (("10"
                                                                              (replaces
                                                                               -1)
                                                                              (("10"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (insteep -)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "divides"
                                                               -3)
                                                              (("2"
                                                                (skolem
                                                                 -
                                                                 "K")
                                                                (("2"
                                                                  (both-sides
                                                                   +
                                                                   "-2-quadrant(p(0)-s)+quadrant(p(N-1)-s)"
                                                                   -3)
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (replace
                                                                       -3)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "p(0)-s")
                                                                          (("2"
                                                                            (ground)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (replaces
                                                                                 -1)
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (replaces
                                                                                 -1)
                                                                                (("4"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (replaces
                                                                                 -1)
                                                                                (("5"
                                                                                  (assert)
                                                                                  (("5"
                                                                                    (expand
                                                                                     "divides"
                                                                                     +)
                                                                                    (("5"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("5"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (replaces
                                                                                 -1)
                                                                                (("6"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (replaces
                                                                                 -1)
                                                                                (("7"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (replaces
                                                                                 -1)
                                                                                (("8"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (replaces
                                                                                 -1)
                                                                                (("9"
                                                                                  (assert)
                                                                                  (("9"
                                                                                    (expand
                                                                                     "divides"
                                                                                     +)
                                                                                    (("9"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("9"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("10"
                                                                              (replaces
                                                                               -1)
                                                                              (("10"
                                                                                (replaces
                                                                                 -1)
                                                                                (("10"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp*) (("3" (assert) nil nil)) nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (hide -1)
              (("2" (expand "divides")
                (("2" (split)
                  (("1" (inst + "1") (("1" (assert) nil nil)) nil)
                   ("2" (inst + "0") (("2" (assert) nil nil)) nil)
                   ("3" (inst + "-1") (("3" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2) (("2" (grind) nil nil)) nil))
        nil))
      nil)
     ("3" (hide 2) (("3" (grind) nil nil)) nil))
    nil)
   ((minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nil application-judgement "below(m)" mod nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (integer nonempty-type-from-decl nil integers nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd? const-decl "bool" integers nil)
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (nonzero_integer nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (TRUE const-decl "bool" booleans nil)
    (det const-decl "real" det_2D "vectors/")
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (even? const-decl "bool" integers nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (odd_plus_odd_is_even application-judgement "even_int" integers
     nil)
    (posint_times_posint_is_posint application-judgement "posint"
     integers nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (divides const-decl "bool" divides nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (winding_number_rec def-decl "int" polygon_contain nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (subrange type-eq-decl nil integers nil)
    (quadrant const-decl "subrange(1, 4)" polygon_contain nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (- const-decl "Vector" vectors_2D "vectors/")
    (IF const-decl "[boolean, T, T -> T]" if_def nil))
   nil)
  (winding_number_rec4-1 nil 3653402637
   (""
    (case "FORALL (N: posnat, p: polygon_2D(N), s: Vect2,i:nat):i<N IMPLIES
                             divides(4, winding_number_rec(N, p, s, i) + quadrant(p(0)) - quadrant(IF i<N-1 THEN p(i+1) ELSE p(0) ENDIF))")
    (("1" (skeep)
      (("1" (inst - "N" "p" "s" "N-1") (("1" (assert) nil nil)) nil))
      nil)
     ("2" (hide 2)
      (("2"
        (case "FORALL (g:Vect2): LET qq = quadrant(g) IN qq=1 OR qq=2 OR qq=3 OR qq=4")
        (("1" (case "divides(4,4) AND divides(4,0) AND divides(4,-4)")
          (("1" (flatten)
            (("1" (induct "i")
              (("1" (skeep)
                (("1" (assert)
                  (("1" (expand "winding_number_rec")
                    (("1" (lift-if)
                      (("1" (assert)
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (ground)
                              (("1"
                                (both-sides "+" 1 -1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -1)
                                    (("1"
                                      (expand "mod" +)
                                      (("1"
                                        (expand "divides")
                                        (("1" (inst?) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replace -1)
                                (("2"
                                  (expand "mod")
                                  (("2"
                                    (expand "divides")
                                    (("2"
                                      (inst
                                       +
                                       "-floor(quadrant(p(1))/4)")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (inst-cp - "p(0)")
                                (("3"
                                  (inst - "p(1)")
                                  (("3"
                                    (ground)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (replaces -1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replaces -1)
                                      (("2"
                                        (replaces -1)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (replaces -1)
                                      (("3"
                                        (replaces -1)
                                        (("3" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (replaces -1)
                                      (("4"
                                        (replaces -1)
                                        (("4" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("5"
                                      (replaces -1)
                                      (("5"
                                        (replaces -1)
                                        (("5" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("6"
                                      (replaces -1)
                                      (("6"
                                        (replaces -1)
                                        (("6" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("7"
                                      (replaces -1)
                                      (("7"
                                        (replaces -1)
                                        (("7" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("8"
                                      (replaces -1)
                                      (("8"
                                        (replaces -1)
                                        (("8" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("4"
                                (inst-cp - "p(0)")
                                (("4"
                                  (inst - "p(1)")
                                  (("4"
                                    (ground)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (replaces -1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replaces -1)
                                      (("2"
                                        (replaces -1)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (replaces -1)
                                      (("3"
                                        (replaces -1)
                                        (("3" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (replaces -1)
                                      (("4"
                                        (replaces -1)
                                        (("4" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("5"
                                      (replaces -1)
                                      (("5"
                                        (replaces -1)
                                        (("5" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("6"
                                      (replaces -1)
                                      (("6"
                                        (replaces -1)
                                        (("6" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("7"
                                      (replaces -1)
                                      (("7"
                                        (replaces -1)
                                        (("7" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("8"
                                      (replaces -1)
                                      (("8"
                                        (replaces -1)
                                        (("8" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skolem 1 "i")
                (("2" (flatten)
                  (("2" (skeep)
                    (("2" (case "i/=N-2")
                      (("1" (flatten)
                        (("1" (expand "winding_number_rec" +)
                          (("1" (lift-if)
                            (("1" (assert)
                              (("1"
                                (lift-if)
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst-cp - "p(i+1)")
                                    (("1"
                                      (inst - "p(2+i)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split +)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (inst - "N" "p" "s")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (insteep -)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "divides"
                                                           -2)
                                                          (("1"
                                                            (skolem
                                                             -
                                                             "K")
                                                            (("1"
                                                              (both-sides
                                                               "+"
                                                               "quadrant(p(i+1)) - quadrant(p(i+2)) + 1"
                                                               -2)
                                                              (("1"
                                                                (replace
                                                                 -2)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     -2)
                                                                    (("1"
                                                                      (ground)
                                                                      (("1"
                                                                        (replaces
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (replaces
                                                                           -1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (replaces
                                                                         -1)
                                                                        (("3"
                                                                          (replaces
                                                                           -1)
                                                                          (("3"
                                                                            (expand
                                                                             "divides")
                                                                            (("3"
                                                                              (inst
                                                                               +
                                                                               "1+K")
                                                                              (("3"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (replaces
                                                                         -1)
                                                                        (("4"
                                                                          (replaces
                                                                           -1)
                                                                          (("4"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("5"
                                                                        (replaces
                                                                         -1)
                                                                        (("5"
                                                                          (replaces
                                                                           -1)
                                                                          (("5"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("6"
                                                                        (replaces
                                                                         -1)
                                                                        (("6"
                                                                          (replaces
                                                                           -1)
                                                                          (("6"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("7"
                                                                        (replaces
                                                                         -1)
                                                                        (("7"
                                                                          (replaces
                                                                           -1)
                                                                          (("7"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("8"
                                                                        (replaces
                                                                         -1)
                                                                        (("8"
                                                                          (replaces
                                                                           -1)
                                                                          (("8"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("9"
                                                                        (replaces
                                                                         -1)
                                                                        (("9"
                                                                          (replaces
                                                                           -1)
                                                                          (("9"
                                                                            (assert)
                                                                            (("9"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (split +)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "N"
                                                             "p"
                                                             "s")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "divides"
                                                                 -2)
                                                                (("1"
                                                                  (skolem
                                                                   -
                                                                   "K")
                                                                  (("1"
                                                                    (both-sides
                                                                     "+"
                                                                     "quadrant(p(i+1)) - quadrant(p(i+2)) -1"
                                                                     -2)
                                                                    (("1"
                                                                      (replaces
                                                                       -2)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (replaces
                                                                             -1)
                                                                            (("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (replaces
                                                                             -1)
                                                                            (("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (replaces
                                                                             -1)
                                                                            (("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (replaces
                                                                             -1)
                                                                            (("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (replaces
                                                                             -1)
                                                                            (("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (assert)
                                                                                (("7"
                                                                                  (expand
                                                                                   "divides")
                                                                                  (("7"
                                                                                    (inst
                                                                                     +
                                                                                     "K-1")
                                                                                    (("7"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (replaces
                                                                             -1)
                                                                            (("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (replaces
                                                                             -1)
                                                                            (("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split +)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (insteep
                                                                 -)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "divides"
                                                                     -2)
                                                                    (("1"
                                                                      (skolem
                                                                       -
                                                                       "K")
                                                                      (("1"
                                                                        (both-sides
                                                                         "+"
                                                                         "quadrant(p(i+1)) - quadrant(p(i+2)) +2"
                                                                         -2)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (both-sides
                                                                             "+"
                                                                             "2"
                                                                             -2)
                                                                            (("1"
                                                                              (replaces
                                                                               -2)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "divides")
                                                                                          (("2"
                                                                                            (inst
                                                                                             +
                                                                                             "K+1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("3"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("3"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("4"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("4"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("5"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("5"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("5"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("6"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("6"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("6"
                                                                                        (assert)
                                                                                        (("6"
                                                                                          (expand
                                                                                           "divides")
                                                                                          (("6"
                                                                                            (inst
                                                                                             +
                                                                                             "K+1")
                                                                                            (("6"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("7"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("7"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("7"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("8"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("8"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("8"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("9"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("9"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("9"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("10"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("10"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("10"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (insteep
                                                               -)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "divides"
                                                                   -1)
                                                                  (("2"
                                                                    (skolem
                                                                     -
                                                                     "K")
                                                                    (("2"
                                                                      (both-sides
                                                                       "+"
                                                                       "quadrant(p(i+1)) - quadrant(p(i+2)) -2"
                                                                       -1)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (ground)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (replaces
                                                                                 -1)
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (replaces
                                                                                 -1)
                                                                                (("4"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (replaces
                                                                                 -1)
                                                                                (("5"
                                                                                  (assert)
                                                                                  (("5"
                                                                                    (expand
                                                                                     "divides")
                                                                                    (("5"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("5"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (replaces
                                                                                 -1)
                                                                                (("6"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (replaces
                                                                                 -1)
                                                                                (("7"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (replaces
                                                                                 -1)
                                                                                (("8"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (replaces
                                                                                 -1)
                                                                                (("9"
                                                                                  (assert)
                                                                                  (("9"
                                                                                    (expand
                                                                                     "divides")
                                                                                    (("9"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("9"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("10"
                                                                              (replaces
                                                                               -1)
                                                                              (("10"
                                                                                (replaces
                                                                                 -1)
                                                                                (("10"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (flatten)
                          (("2" (expand "winding_number_rec" +)
                            (("2" (assert)
                              (("2"
                                (case "NOT i+1 = N-1")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (lift-if)
                                  (("2"
                                    (inst-cp - "p(1+i)")
                                    (("2"
                                      (split +)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (insteep -)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (split +)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (insteep -)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "p(0)")
                                                          (("1"
                                                            (expand
                                                             "divides"
                                                             -4)
                                                            (("1"
                                                              (skolem
                                                               -
                                                               "K")
                                                              (("1"
                                                                (both-sides
                                                                 +
                                                                 "1-quadrant(p(0))+quadrant(p(N-1))"
                                                                 -4)
                                                                (("1"
                                                                  (replaces
                                                                   -4)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (ground)
                                                                      (("1"
                                                                        (replaces
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (replaces
                                                                           -1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (replaces
                                                                         -1)
                                                                        (("3"
                                                                          (replaces
                                                                           -1)
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (expand
                                                                               "divides"
                                                                               +)
                                                                              (("3"
                                                                                (inst
                                                                                 +
                                                                                 "K+1")
                                                                                (("3"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (replaces
                                                                         -1)
                                                                        (("4"
                                                                          (replaces
                                                                           -1)
                                                                          (("4"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("5"
                                                                        (replaces
                                                                         -1)
                                                                        (("5"
                                                                          (replaces
                                                                           -1)
                                                                          (("5"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("6"
                                                                        (replaces
                                                                         -1)
                                                                        (("6"
                                                                          (replaces
                                                                           -1)
                                                                          (("6"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("7"
                                                                        (replaces
                                                                         -1)
                                                                        (("7"
                                                                          (replaces
                                                                           -1)
                                                                          (("7"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("8"
                                                                        (replaces
                                                                         -1)
                                                                        (("8"
                                                                          (replaces
                                                                           -1)
                                                                          (("8"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("9"
                                                                        (replaces
                                                                         -1)
                                                                        (("9"
                                                                          (replaces
                                                                           -1)
                                                                          (("9"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst-cp
                                                       -
                                                       "p(0)")
                                                      (("1"
                                                        (insteep -)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "divides"
                                                             -4)
                                                            (("1"
                                                              (skolem
                                                               -
                                                               "K")
                                                              (("1"
                                                                (both-sides
                                                                 +
                                                                 "-1-quadrant(p(0))+quadrant(p(N-1))"
                                                                 -4)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (hide
                                                                       -4)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (replaces
                                                                             -1)
                                                                            (("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (replaces
                                                                             -1)
                                                                            (("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (replaces
                                                                             -1)
                                                                            (("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (replaces
                                                                             -1)
                                                                            (("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (replaces
                                                                             -1)
                                                                            (("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (assert)
                                                                                (("7"
                                                                                  (expand
                                                                                   "divides"
                                                                                   +)
                                                                                  (("7"
                                                                                    (inst
                                                                                     +
                                                                                     "K-1")
                                                                                    (("7"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (replaces
                                                                             -1)
                                                                            (("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (replaces
                                                                             -1)
                                                                            (("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (split +)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (insteep -)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "divides"
                                                             -4)
                                                            (("1"
                                                              (skolem
                                                               -
                                                               "K")
                                                              (("1"
                                                                (both-sides
                                                                 +
                                                                 "2-quadrant(p(0))+quadrant(p(N-1))"
                                                                 -4)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (replaces
                                                                     -4)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "p(0)")
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "divides"
                                                                                   +)
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "K+1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (replaces
                                                                             -1)
                                                                            (("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (replaces
                                                                             -1)
                                                                            (("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (replaces
                                                                             -1)
                                                                            (("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (replaces
                                                                             -1)
                                                                            (("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (assert)
                                                                                (("6"
                                                                                  (expand
                                                                                   "divides"
                                                                                   +)
                                                                                  (("6"
                                                                                    (inst
                                                                                     +
                                                                                     "K+1")
                                                                                    (("6"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (replaces
                                                                             -1)
                                                                            (("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (replaces
                                                                             -1)
                                                                            (("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (replaces
                                                                             -1)
                                                                            (("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("10"
                                                                            (replaces
                                                                             -1)
                                                                            (("10"
                                                                              (replaces
                                                                               -1)
                                                                              (("10"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (insteep -)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "divides"
                                                               -3)
                                                              (("2"
                                                                (skolem
                                                                 -
                                                                 "K")
                                                                (("2"
                                                                  (both-sides
                                                                   +
                                                                   "-2-quadrant(p(0))+quadrant(p(N-1))"
                                                                   -3)
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (replace
                                                                       -3)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "p(0)")
                                                                          (("2"
                                                                            (ground)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (replaces
                                                                               -1)
                                                                              (("3"
                                                                                (replaces
                                                                                 -1)
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (replaces
                                                                               -1)
                                                                              (("4"
                                                                                (replaces
                                                                                 -1)
                                                                                (("4"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("5"
                                                                              (replaces
                                                                               -1)
                                                                              (("5"
                                                                                (replaces
                                                                                 -1)
                                                                                (("5"
                                                                                  (assert)
                                                                                  (("5"
                                                                                    (expand
                                                                                     "divides"
                                                                                     +)
                                                                                    (("5"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("5"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("6"
                                                                              (replaces
                                                                               -1)
                                                                              (("6"
                                                                                (replaces
                                                                                 -1)
                                                                                (("6"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("7"
                                                                              (replaces
                                                                               -1)
                                                                              (("7"
                                                                                (replaces
                                                                                 -1)
                                                                                (("7"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("8"
                                                                              (replaces
                                                                               -1)
                                                                              (("8"
                                                                                (replaces
                                                                                 -1)
                                                                                (("8"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("9"
                                                                              (replaces
                                                                               -1)
                                                                              (("9"
                                                                                (replaces
                                                                                 -1)
                                                                                (("9"
                                                                                  (assert)
                                                                                  (("9"
                                                                                    (expand
                                                                                     "divides"
                                                                                     +)
                                                                                    (("9"
                                                                                      (inst
                                                                                       +
                                                                                       "K-1")
                                                                                      (("9"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("10"
                                                                              (replaces
                                                                               -1)
                                                                              (("10"
                                                                                (replaces
                                                                                 -1)
                                                                                (("10"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp*) (("3" (assert) nil nil)) nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (hide -1)
              (("2" (expand "divides")
                (("2" (split)
                  (("1" (inst + "1") (("1" (assert) nil nil)) nil)
                   ("2" (inst + "0") (("2" (assert) nil nil)) nil)
                   ("3" (inst + "-1") (("3" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2) (("2" (grind) nil nil)) nil))
        nil))
      nil)
     ("3" (hide 2) (("3" (grind) nil nil)) nil))
    nil)
   ((det const-decl "real" det_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/"))
   shostak))
 (winding_number_TCC1 0
  (winding_number_TCC1-1 nil 3653407432
   ("" (skeep)
    (("" (lemma "winding_number_rec4")
      (("" (inst?)
        (("" (expand "divides" -1)
          (("" (skolem - "K")
            (("" (replaces -1) (("" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((winding_number_rec4 formula-decl nil polygon_contain nil)
    (divides const-decl "bool" divides nil)
    (TRUE const-decl "bool" booleans nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil))
 (definitely_inside_prelim_TCC1 0
  (definitely_inside_prelim_TCC1-1 nil 3634665094
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (CrossAns type-eq-decl nil acceptable_polygon nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (compute_intercept const-decl "CrossAns" acceptable_polygon nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NumEdgesCross type-eq-decl nil polygon_contain nil)
    (edges_crossed_upto const-decl "bool" polygon_contain nil)
    (bijective? const-decl "bool" functions nil)
    (EdgeCross type-eq-decl nil acceptable_polygon nil)
    (upshot_crosses_edge const-decl "EdgeCross" acceptable_polygon nil)
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil))
   nil))
 (definitely_outside_prelim_TCC1 0
  (definitely_outside_prelim_TCC1-1 nil 3644316752
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (CrossAns type-eq-decl nil acceptable_polygon nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (compute_intercept const-decl "CrossAns" acceptable_polygon nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (N!1 skolem-const-decl "posnat" polygon_contain nil)
    (p!1 skolem-const-decl "polygon_2D(N!1)" polygon_contain nil)
    (s!1 skolem-const-decl "Vect2" polygon_contain nil)
    (nuc!1 skolem-const-decl "{nec: NumEdgesCross |
         nec`num <= N!1 AND
          (EXISTS (sig:
                     [below(nec`num) ->
                        (edges_crossed_upto(N!1, p!1, s!1, N!1 - 1))]):
             bijective?(sig))
           AND
           (nec`invalid IFF
             (EXISTS (j: upto(N!1 - 1)):
                upshot_crosses_edge(N!1, p!1, s!1, j)`invalid))}"
     polygon_contain nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (NumEdgesCross type-eq-decl nil polygon_contain nil)
    (edges_crossed_upto const-decl "bool" polygon_contain nil)
    (bijective? const-decl "bool" functions nil)
    (EdgeCross type-eq-decl nil acceptable_polygon nil)
    (upshot_crosses_edge const-decl "EdgeCross" acceptable_polygon nil)
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil))
   nil))
 (definitely_exclusive 0
  (definitely_exclusive-1 nil 3651823963
   ("" (skeep)
    (("" (expand "definitely_outside")
      (("" (expand "definitely_inside")
        (("" (flatten)
          (("" (assert)
            (("" (hide +)
              (("" (expand "definitely_outside_prelim")
                ((""
                  (name "nuc" "number_upshot_crosses_upto(N,
                                      fix_polygon(N, p, s, BUFF),
                                      s,
                                      N - 1)")
                  (("" (replace -1)
                    ((""
                      (name "mcdi"
                            "min_cross_dist_index_upto(N, fix_polygon(N, p, s, BUFF), s,
                                   N - 1)")
                      (("" (replace -1)
                        (("" (flatten)
                          (("" (assert)
                            (("" (expand "definitely_inside_prelim")
                              ((""
                                (replace -1)
                                ((""
                                  (replace -2)
                                  ((""
                                    (flatten)
                                    (("" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((definitely_outside const-decl "bool" polygon_contain nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (definitely_inside const-decl "bool" polygon_contain nil))
   shostak)))

